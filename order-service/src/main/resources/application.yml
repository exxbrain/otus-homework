server:
  port: ${PORT:80}

spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: "${ISSUER_URL:${AUTH_URL}}/realms/arch"
          jwk-set-uri: "${AUTH_URL}/realms/arch/protocol/openid-connect/certs"
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQL10Dialect
    show-sql: true
    properties:
      javax:
        persistence:
          schema-generation:
            create-source: metadata
            scripts:
              action: create
              create-target: create.sql
  application:
    name: order-service
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/order?user=postgres&password=12345}

logging:
  level:
    root: INFO
    org.springframework.web: INFO

info:
  app:
    name: Order Service
    version: ${VERSION}

management:
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
    health:
      show-details: always
      probes:
        enabled: true
  endpoints:
    web:
      exposure:
        include: "*"