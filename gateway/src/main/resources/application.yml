server:
  port: 8080

eureka:
  client:
    serviceUrl:
      defaultZone: "http://${DISCOVERY-SERVICE:localhost}:8761/eureka"

logging:
  level:
    root: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.springframework.cloud.gateway: DEBUG

management:
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
    health:
      show-details: always
      probes:
        enabled: true
    gateway:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"

spring:

  config:
    import: "file:${ROUTES_FILE:/config/routes.yaml}"

  application:
    name: gateway

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: "${ISSUER_URL:${AUTH_URL}}/realms/arch"
          jwk-set-uri: "${AUTH_URL}/realms/arch/protocol/openid-connect/certs"
      client:
        registration:
          gateway:
            provider: keycloak
            client-id: gateway
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: openid,profile,email
        provider:
          keycloak:
            authorization-uri: "${AUTH_URL}/realms/arch/protocol/openid-connect/auth"
            token-uri: "${AUTH_URL}/realms/arch/protocol/openid-connect/token"
            user-info-uri: "${AUTH_URL}/realms/arch/protocol/openid-connect/userinfo"
            user-name-attribute: "preferred_username"
            jwk-set-uri: "${AUTH_URL}/realms/arch/protocol/openid-connect/certs"
  jmx:
    enabled: false
