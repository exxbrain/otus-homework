server:
  port: 80

logging:
  level:
    root: TRACE
    org.springframework.web: INFO
    org.springframework.security: TRACE
    org.springframework.security.oauth2: TRACE
    org.springframework.cloud.gateway: TRACE

management:
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
    health:
      show-details: always
  endpoints:
    web:
      exposure:
        include: "*"

spring:

  security:
    oauth2:
      client:
        registration:
          gateway:
            provider: keycloak
            client-id: gateway
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: openid,profile,email
        provider:
          keycloak:
            authorization-uri: "${AUTH_URL}/realms/arch/protocol/openid-connect/auth"
            token-uri: "${AUTH_URL}/realms/arch/protocol/openid-connect/token"
            user-info-uri: "${AUTH_URL}/realms/arch/protocol/openid-connect/userinfo"
            user-name-attribute: "preferred_username"
            jwk-set-uri: "${AUTH_URL}/realms/arch/protocol/openid-connect/certs"

  cloud:
    gateway:
      default-filters:
        - PrefixPath=/
        - TokenRelay=
        - RemoveRequestHeader=Cookie
        - AddResponseHeader=X-Response-Default-Foo, Default-Bar

      routes:
        # =====================================
        # to run server
        # $ wscat --listen 9000
        # to run client
        # $ wscat --connect ws://localhost:8080/echo
        - id: websocket_test
          uri: ws://localhost:9000
          order: 9000
          predicates:
            - Path=/echo
        # =====================================
        - id: orders
          uri: ${ORDERS_URI}
          order: 10000
          predicates:
            - Path=/orders/**
  jmx:
    enabled: false
